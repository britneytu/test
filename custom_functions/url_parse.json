{
    "create_time": "2023-04-26T05:48:47.273058+00:00",
    "custom_function_id": "4e6f418d4ec871ee47948edb22f09d5e2fd25abd",
    "description": "Separate a URL into its components using urlparse() from the urllib module of Python 3.",
    "draft_mode": false,
    "inputs": [
        {
            "contains_type": [
                "url"
            ],
            "description": "The URL to parse",
            "input_type": "item",
            "name": "input_url",
            "placeholder": "artifact:*.cef.requestUrl"
        }
    ],
    "outputs": [
        {
            "contains_type": [],
            "data_path": "scheme",
            "description": "The scheme of the URL, such as HTTP, HTTPS, or FTP."
        },
        {
            "contains_type": [],
            "data_path": "netloc",
            "description": "The network location part of the URL."
        },
        {
            "contains_type": [
                ""
            ],
            "data_path": "path",
            "description": "The path to the resource after the first slash in the URL, such as \"en_us/software/splunk-security-orchestration-and-automation.html\"."
        },
        {
            "contains_type": [],
            "data_path": "params",
            "description": "The parameters in the URL after the semicolon."
        },
        {
            "contains_type": [
                ""
            ],
            "data_path": "query",
            "description": "The query string of the URL after the question mark. Multiple parameters are not separated from each other."
        },
        {
            "contains_type": [],
            "data_path": "fragment",
            "description": "The subcomponent of the resource which is identified after the hash sign."
        },
        {
            "contains_type": [
                "url"
            ],
            "data_path": "output_url",
            "description": "Passthrough of the original url"
        },
        {
            "contains_type": [
                "hostname"
            ],
            "data_path": "hostname",
            "description": "The host name of the url"
        },
        {
            "contains_type": [
                "port"
            ],
            "data_path": "port",
            "description": "The port number, if one is used"
        }
    ],
    "outputs_type": "item",
    "platform_version": "5.5.0.108488",
    "python_version": "3"
}